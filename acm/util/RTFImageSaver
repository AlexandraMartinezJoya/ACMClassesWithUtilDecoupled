//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package acm.util;

import java.awt.Image;
import java.awt.image.ImageObserver;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.PrintStream;

class RTFImageSaver extends PICTImageSaver {
    private static final String[] RTF_HEADER = new String[]{"{\\rtf1\\mac\\deff2", "{\\fonttbl{\\f20\\froman Times;} {\\f22\\fmodern Courier;}}", "{\\colortbl\\red0\\green0\\blue0;\\red0\\green0\\blue255;", "\\red0\\green255\\blue255;\\red0\\green255\\blue0;", "\\red255\\green0\\blue255;\\red255\\green0\\blue0;", "\\red255\\green255\\blue0;\\red255\\green255\\blue255;}", "{\\stylesheet{\\f20 \\sbasedon222\\snext0 Normal;}}", "\\widowctrl\\ftnbj \\sectd \\sbknone\\linemod0\\linex0\\cols1\\endnhere", "\\pard\\plain \\s0\\qc\\f20"};

    RTFImageSaver() {
    }

    public void saveImage(Image var1) {
        int var2 = var1.getWidth((ImageObserver)null);
        int var3 = var1.getHeight((ImageObserver)null);
        PrintStream var4 = new PrintStream(new BufferedOutputStream(this.getOutputStream()));
        this.setOutputStream(JTFTools.openHexByteOutputStream(var4));

        for(int var5 = 0; var5 < RTF_HEADER.length; ++var5) {
            var4.println(RTF_HEADER[var5]);
        }

        var4.println("{{\\pict\\macpict\\picw" + var2 + "\\pich" + var3);
        this.setPaddingFlag(false);
        super.saveImage(var1);
        var4.println("}}\\par");
        var4.println("}");
        var4.close();
    }

    public void updateFileType(File var1) {
        Platform.setFileTypeAndCreator(var1, "TEXT", "MSWD");
    }
}
