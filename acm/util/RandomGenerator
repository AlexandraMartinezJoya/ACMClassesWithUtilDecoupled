//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package acm.util;

import java.awt.Color;
import java.util.Random;

public class RandomGenerator extends Random {
    private static RandomGenerator standardInstance;
    static final long serialVersionUID = 1L;

    public RandomGenerator() {
    }

    public int nextInt(int var1) {
        return this.nextInt(0, var1 - 1);
    }

    public boolean nextBoolean() {
        return this.nextBoolean(0.5D);
    }

    public int nextInt(int var1, int var2) {
        return var1 + (int)((double)(var2 - var1 + 1) * this.nextDouble());
    }

    public double nextDouble(double var1, double var3) {
        return var1 + (var3 - var1) * this.nextDouble();
    }

    public boolean nextBoolean(double var1) {
        return this.nextDouble() < var1;
    }

    public Color nextColor() {
        return new Color(this.nextInt(256), this.nextInt(256), this.nextInt(256));
    }

    public static RandomGenerator getInstance() {
        if (standardInstance == null) {
            standardInstance = new RandomGenerator();
        }

        return standardInstance;
    }
}
