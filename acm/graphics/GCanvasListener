//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package acm.graphics;

import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;

class GCanvasListener implements MouseListener, MouseMotionListener, ComponentListener {
    private GCanvas gCanvas;

    public GCanvasListener(GCanvas var1) {
        this.gCanvas = var1;
    }

    public void mouseClicked(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mousePressed(MouseEvent var1) {
        this.gCanvas.requestFocus();
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mouseReleased(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mouseEntered(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mouseExited(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mouseDragged(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void mouseMoved(MouseEvent var1) {
        this.gCanvas.dispatchMouseEvent(var1);
    }

    public void componentResized(ComponentEvent var1) {
        this.gCanvas.initOffscreenImage();
        if (this.gCanvas.isShowing()) {
            this.gCanvas.repaint();
        }

    }

    public void componentHidden(ComponentEvent var1) {
    }

    public void componentMoved(ComponentEvent var1) {
    }

    public void componentShown(ComponentEvent var1) {
    }
}
