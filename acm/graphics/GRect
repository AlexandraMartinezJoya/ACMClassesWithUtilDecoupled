//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package acm.graphics;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;

public class GRect extends GObject implements GFillable, GResizable, GScalable {
    private double frameWidth;
    private double frameHeight;
    private boolean isFilled;
    private Color fillColor;
    static final long serialVersionUID = 1L;

    public GRect(double var1, double var3) {
        this(0.0D, 0.0D, var1, var3);
    }

    public GRect(double var1, double var3, double var5, double var7) {
        this.frameWidth = var5;
        this.frameHeight = var7;
        this.setLocation(var1, var3);
    }

    public void paint(Graphics var1) {
        Rectangle var2 = this.getAWTBounds();
        if (this.isFilled()) {
            var1.setColor(this.getFillColor());
            var1.fillRect(var2.x, var2.y, var2.width, var2.height);
            var1.setColor(this.getColor());
        }

        var1.drawRect(var2.x, var2.y, var2.width, var2.height);
    }

    public void setFilled(boolean var1) {
        this.isFilled = var1;
        this.repaint();
    }

    public boolean isFilled() {
        return this.isFilled;
    }

    public void setFillColor(Color var1) {
        this.fillColor = var1;
        this.repaint();
    }

    public Color getFillColor() {
        return this.fillColor == null ? this.getColor() : this.fillColor;
    }

    public void setSize(double var1, double var3) {
        this.frameWidth = var1;
        this.frameHeight = var3;
        this.repaint();
    }

    public final void setSize(GDimension var1) {
        this.setSize(var1.getWidth(), var1.getHeight());
    }

    public GDimension getSize() {
        return new GDimension(this.frameWidth, this.frameHeight);
    }

    public void setBounds(double var1, double var3, double var5, double var7) {
        this.frameWidth = var5;
        this.frameHeight = var7;
        this.setLocation(var1, var3);
    }

    public final void setBounds(GRectangle var1) {
        this.setBounds(var1.getX(), var1.getY(), var1.getWidth(), var1.getHeight());
    }

    public GRectangle getBounds() {
        return new GRectangle(this.getX(), this.getY(), this.frameWidth, this.frameHeight);
    }

    public double getWidth() {
        return this.frameWidth;
    }

    public double getHeight() {
        return this.frameHeight;
    }

    public void scale(double var1, double var3) {
        this.frameWidth *= var1;
        this.frameHeight *= var3;
        this.repaint();
    }

    public final void scale(double var1) {
        this.scale(var1, var1);
    }

    protected Rectangle getAWTBounds() {
        return new Rectangle(GMath.round(this.getX()), GMath.round(this.getY()), GMath.round(this.frameWidth), GMath.round(this.frameHeight));
    }
}
